(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('standardized-audio-context')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/common', '@angular/core', 'standardized-audio-context'], factory) :
	(factory((global.angularAudioContext = global.angularAudioContext || {}),global._angular_common,global._angular_core,global.standardizedAudioContext));
}(this, (function (exports,_angular_common,_angular_core,standardizedAudioContext) { 'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var AudioContext$1 = new _angular_core.OpaqueToken('AUDIO_CONTEXT_CONSTRUCTOR'); // tslint:disable-line:variable-name
// tslint:disable-line:variable-name
function audioContextConstructorFactory() {
    return new standardizedAudioContext.AudioContext();
}
var isSupported$1 = new _angular_core.OpaqueToken('IS_SUPPORTED_PROMISE');
function isSupportedFactory() {
    return standardizedAudioContext.isSupported;
}
var AudioContextModule = function AudioContextModule() {
    _classCallCheck(this, AudioContextModule);
};
AudioContextModule.decorators = [{ type: _angular_core.NgModule, args: [{
        imports: [_angular_common.CommonModule],
        providers: [{ provide: AudioContext$1, useFactory: audioContextConstructorFactory }, { provide: isSupported$1, useFactory: isSupportedFactory }]
    }] }];
/** @nocollapse */
AudioContextModule.ctorParameters = function () {
    return [];
};

exports.AudioContext = AudioContext$1;
exports.AudioContextModule = AudioContextModule;
exports.isSupported = isSupported$1;

Object.defineProperty(exports, '__esModule', { value: true });

})));
