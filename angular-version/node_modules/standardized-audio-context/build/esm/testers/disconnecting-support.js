var DisconnectingSupportTester = (function () {
    function DisconnectingSupportTester() {
    }
    DisconnectingSupportTester.prototype.test = function (audioContext) {
        return new Promise(function (resolve) {
            var analyzer = audioContext.createScriptProcessor(256, 1, 1);
            var dummy = audioContext.createGain();
            // Safari does not play buffers which contain just one frame.
            var ones = audioContext.createBuffer(1, 2, 44100);
            var channelData = ones.getChannelData(0);
            channelData[0] = 1;
            channelData[1] = 1;
            var source = audioContext.createBufferSource();
            source.buffer = ones;
            source.loop = true;
            source.connect(analyzer);
            analyzer.connect(audioContext.destination);
            source.connect(dummy);
            source.disconnect(dummy);
            analyzer.onaudioprocess = function (event) {
                var chnnlDt = event.inputBuffer.getChannelData(0);
                if (Array.prototype.some.call(chnnlDt, function (sample) { return sample === 1; })) {
                    resolve(true);
                }
                else {
                    resolve(false);
                }
                source.stop();
                analyzer.onaudioprocess = null;
                source.disconnect(analyzer);
                analyzer.disconnect(audioContext.destination);
            };
            source.start();
        });
    };
    return DisconnectingSupportTester;
}());
export { DisconnectingSupportTester };
//# sourceMappingURL=/users/chrisguttandin/repositories/standardized-audio-context/node_modules/tsconfig-holy-grail/src/testers/disconnecting-support.js.map