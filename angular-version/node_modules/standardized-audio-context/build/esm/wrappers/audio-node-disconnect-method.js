var AudioNodeDisconnectMethodWrapper = (function () {
    function AudioNodeDisconnectMethodWrapper() {
    }
    AudioNodeDisconnectMethodWrapper.prototype.wrap = function (audioNode) {
        var destinations = new Map();
        audioNode.connect = (function (connect) {
            return function (destination, output, input) {
                if (output === void 0) { output = 0; }
                if (input === void 0) { input = 0; }
                destinations.set(destination, { input: input, output: output });
                return connect.call(audioNode, destination, output, input);
            };
        })(audioNode.connect);
        audioNode.disconnect = (function (disconnect) {
            return function (destination) {
                disconnect.apply(audioNode);
                if (destination !== undefined && destinations.has(destination)) {
                    destinations.delete(destination);
                    destinations.forEach(function (_a, dstntn) {
                        var input = _a.input, output = _a.output;
                        audioNode.connect(dstntn, input, output);
                    });
                }
            };
        })(audioNode.disconnect);
    };
    return AudioNodeDisconnectMethodWrapper;
}());
export { AudioNodeDisconnectMethodWrapper };
//# sourceMappingURL=/users/chrisguttandin/repositories/standardized-audio-context/node_modules/tsconfig-holy-grail/src/wrappers/audio-node-disconnect-method.js.map