import { InvalidAccessErrorFactory } from '../factories/invalid-access-error';
import { InvalidStateErrorFactory } from '../factories/invalid-state-error';
import { NotSupportedErrorFactory } from '../factories/not-supported-error';
import { IAudioContext } from '../interfaces';
import { TUnpatchedAudioContext } from '../types';
export declare class IIRFilterNodeFaker {
    private _invalidAccessErrorFactory;
    private _invalidStateErrorFactory;
    private _notSupportedErrorFactory;
    constructor(_invalidAccessErrorFactory: InvalidAccessErrorFactory, _invalidStateErrorFactory: InvalidStateErrorFactory, _notSupportedErrorFactory: NotSupportedErrorFactory);
    fake(feedforward: number[], feedback: number[], audioContext: IAudioContext, unpatchedAudioContext: TUnpatchedAudioContext): any;
}
